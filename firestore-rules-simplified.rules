rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    function isAuthed() { return request.auth != null; }

    function isParticipant(chatId) {
      return isAuthed()
        && exists(/databases/$(db)/documents/chats/$(chatId))
        && (request.auth.uid in get(/databases/$(db)/documents/chats/$(chatId)).data.participants);
    }

    /** Users: each user can read/write their own profile doc */
    match /users/{uid} {
      allow read: if isAuthed() && request.auth.uid == uid;
      allow write: if isAuthed() && request.auth.uid == uid;
    }

    /** Presence (Firestore fallback): presence/{uid} */
    match /presence/{uid} {
      allow read: if isAuthed();
      allow write: if isAuthed() && request.auth.uid == uid;
    }

    /** Global notification config (per user) */
    match /users/{uid}/notifications/{docId} {
      allow read: if isAuthed() && request.auth.uid == uid;
      allow write: if isAuthed() && request.auth.uid == uid;
    }

    /** Chats and messages (participants-only) */
    match /chats/{chatId} {
      allow read, write: if isParticipant(chatId);

      match /messages/{messageId} {
        allow read, write: if isParticipant(chatId);
      }
    }
  }
}
