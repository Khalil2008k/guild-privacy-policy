{
  "name": "guild-2",
  "version": "1.0.0",
  "main": "expo-router/entry",
  "packageManager": "npm@10.2.3",
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "start": "expo start",
    "android": "expo run:android",
    "ios": "expo run:ios",
    "web": "expo start --web",
    "dev": "cd backend && npm run dev",
    "dev:all": "npm run dev:backend & npm run dev:app & npm run dev:admin",
    "dev:backend": "cd backend && npm run dev",
    "dev:app": "expo start",
    "dev:admin": "cd admin-portal && npm run dev",
    "test": "jest",
    "test:watch": "vitest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --runInBand --coverage --watchAll=false",
    "test:mutation": "stryker run",
    "test:emulator": "firebase emulators:exec --only auth,firestore,storage,functions 'npm test'",
    "test:e2e": "npm run cypress:run",
    "test:prod": "npx expo start --no-dev",
    "test:production": "npx expo start --no-dev --clear",
    "android:prod": "expo run:android --no-dev-client",
    "ios:prod": "expo run:ios --no-dev-client",
    "lint": "eslint . --ext .ts,.tsx,.js,.jsx",
    "lint:fix": "eslint . --ext .ts,.tsx,.js,.jsx --fix",
    "typecheck": "tsc --noEmit",
    "analyze-bundle": "node scripts/analyze-bundle.js",
    "build:analyze": "expo export --platform all --dev false && npm run analyze-bundle",
    "optimize": "npm run lint && npm run analyze-bundle",
    "precommit": "npm run lint && npm run test",
    "test:universal": "cd testing && node scripts/enhanced-test-manager.js run",
    "test:deploy": "cd testing && node scripts/deployment-readiness.js run",
    "analyze:duplication": "node scripts/analyze-duplication.js",
    "migrate:nx": "node scripts/migrate-to-nx.js",
    "cleanup:deps": "depcheck && rm -rf node_modules package-lock.json && npm install",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "security:audit": "npm audit --audit-level moderate",
    "security:fix": "npm audit fix",
    "deps:check": "depcheck --json",
    "deps:update": "npm-check-updates -u",
    "deps:install": "npm install",
    "license:check": "license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;Unlicense'",
    "prepare": "husky install",
    "nx:graph": "npx nx graph",
    "nx:affected": "npx nx affected --target=build",
    "nx:affected:test": "npx nx affected --target=test",
    "nx:affected:lint": "npx nx affected --target=lint",
    "optimize:hooks": "node scripts/optimize-react-hooks.js",
    "enable:new-arch": "node scripts/enable-new-architecture.js",
    "implement:gestures": "node scripts/implement-gesture-handlers.js",
    "optimize:backend": "node scripts/optimize-backend.js",
    "implement:security": "node scripts/implement-security.js",
    "implement:monitoring": "node scripts/implement-monitoring.js",
    "implement:compliance": "node scripts/implement-compliance.js",
    "implement:ux": "node scripts/implement-ux.js",
    "implement:analytics-ai": "node scripts/implement-analytics-ai.js",
    "implement:testing-qa": "node scripts/implement-testing-qa.js",
    "type-check": "tsc --noEmit",
    "depcheck": "depcheck",
    "analyze:bundle": "npx vite-bundle-analyzer dist",
    "test:parallel": "vitest run --reporter=verbose --pool=threads --poolOptions.threads.singleThread=false",
    "test:backend": "jest --projects=backend",
    "test:mobile": "jest --projects=mobile",
    "test:admin": "jest --projects=admin",
    "cypress:open": "cypress open",
    "cypress:run": "cypress run",
    "cypress:run:parallel": "cypress run --parallel --record",
    "cypress:run:mobile": "cypress run --config viewportWidth=375,viewportHeight=667",
    "cypress:run:desktop": "cypress run --config viewportWidth=1280,viewportHeight=720",
    "test:e2e:ci": "npm run cypress:run:parallel",
    "test:load": "echo \"Load testing requires JMeter installation\"",
    "test:load:setup": "echo \"Setting up JMeter distributed testing environment...\"",
    "test:load:report": "echo \"Generating load test reports...\"",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:prod": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d",
    "docker:test": "docker-compose -f docker-compose.test.yml up --abort-on-container-exit",
    "deploy:gke": "./infrastructure/deploy.sh",
    "deploy:staging": "helm upgrade --install guild-staging infrastructure/helm/guild-platform --namespace guild-staging",
    "deploy:production": "helm upgrade --install guild-production helm/guild-platform --namespace production",
    "deploy:rollback": "helm rollback guild-production 1",
    "ci:validate": "npm run lint && npm run type-check && npm run security:audit",
    "ci:test": "npm run test:ci && npm run test:e2e:ci",
    "ci:build": "npm run build && npm run build:docker",
    "ci:deploy": "echo \"Deploying via GitLab CI/CD...\"",
    "build:docker": "docker build -t guild-api .",
    "deploy:helm": "helm upgrade --install guild-production infrastructure/helm/guild-platform --namespace guild-production --values infrastructure/helm/guild-platform/values-production.yaml",
    "deploy:diff": "helm diff upgrade guild-production infrastructure/helm/guild-platform --namespace guild-production",
    "argocd:install": "./infrastructure/install-argocd.sh",
    "argocd:sync": "argocd app sync guild-platform",
    "argocd:diff": "argocd app diff guild-platform",
    "argocd:rollback": "argocd app rollback guild-platform",
    "argocd:logs": "argocd app logs guild-platform",
    "istio:install": "./infrastructure/install-istio.sh",
    "istio:verify": "kubectl get pods -n istio-system && kubectl get svc -n istio-system",
    "istio:traffic": "istioctl proxy-config routes guild-api -n guild-production",
    "istio:security": "istioctl authn tls-check guild-api.guild-production.svc.cluster.local",
    "build:cluster": "./infrastructure/build-in-cluster.sh",
    "build:kaniko": "kubectl apply -f infrastructure/kaniko/kaniko-build.yaml",
    "build:verify": "kubectl logs pod/kaniko-build -n kaniko | grep \"Build completed successfully\"",
    "karpenter:install": "./infrastructure/install-karpenter.sh",
    "karpenter:scale": "kubectl scale deployment guild-api --replicas=20 -n guild-production",
    "karpenter:monitor": "kubectl get nodes --selector=karpenter.sh/provisioner-name",
    "karpenter:cost": "kubectl get nodepools.cost-analyzer.karpenter.sh",
    "rollouts:install": "./infrastructure/install-argo-rollouts.sh",
    "rollouts:promote": "kubectl argo rollouts promote guild-api-rollout -n guild-production",
    "rollouts:abort": "kubectl argo rollouts abort guild-api-rollout -n guild-production",
    "rollouts:status": "kubectl argo rollouts get rollout guild-api-rollout -n guild-production",
    "rollouts:dashboard": "kubectl port-forward svc/argo-rollouts-dashboard 3100:3100 -n argo-rollouts",
    "oidc:setup": "./infrastructure/setup-oidc.sh",
    "oidc:verify": "aws iam get-role --role-name github-actions-oidc",
    "github:workflow": "echo \"GitHub Actions workflow configured in .github/workflows/\"",
    "github:secrets": "echo \"Set up GitHub repository secrets: AWS_ACCOUNT_ID, GCR_JSON_KEY, SLACK_WEBHOOK_URL\"",
    "linkerd:install": "./infrastructure/install-linkerd.sh",
    "linkerd:check": "linkerd check",
    "linkerd:dashboard": "linkerd viz dashboard",
    "linkerd:stat": "linkerd stat deploy -n guild-production",
    "linkerd:traffic": "linkerd viz stat deploy -n guild-production --all-namespaces",
    "eso:install": "./infrastructure/install-external-secrets.sh",
    "eso:verify": "kubectl get externalsecrets -n guild-production",
    "eso:refresh": "kubectl annotate externalsecrets --all -n guild-production external-secrets.io/force-sync=$(date +%s)",
    "eso:logs": "kubectl logs -f deployment/external-secrets -n external-secrets-system",
    "thanos:install": "./infrastructure/install-thanos.sh",
    "thanos:query": "kubectl port-forward svc/thanos-query 10902:10902 -n monitoring",
    "thanos:dashboard": "kubectl port-forward svc/thanos-query-frontend 10902:10902 -n monitoring",
    "thanos:compact": "kubectl logs -f statefulset/thanos-compactor -n monitoring",
    "thanos:verify": "kubectl get pods -n monitoring --selector=app=thanos",
    "test:vitest": "vitest",
    "test:vitest:run": "vitest run",
    "test:vitest:coverage": "vitest run --coverage",
    "test:vitest:ui": "vitest --ui",
    "test:vitest:bench": "vitest bench",
    "test:playwright": "playwright test",
    "test:playwright:ui": "playwright test --ui",
    "test:playwright:debug": "playwright test --debug",
    "test:playwright:headed": "playwright test --headed",
    "test:playwright:chromium": "playwright test --project=chromium",
    "test:playwright:browserstack": "playwright test --project=BrowserStack --config=playwright.browserstack.config.ts",
    "test:playwright:accessibility": "playwright test --grep=\"accessibility\"",
    "test:locust": "locust -f testing/load/locust/guild_load_test.py",
    "test:locust:master": "LOCUST_MODE=master locust -f testing/load/locust/distributed_test.py",
    "test:locust:worker": "LOCUST_MODE=worker locust -f testing/load/locust/distributed_test.py --master-host=localhost",
    "test:locust:deploy": "./testing/deploy-locust.sh",
    "security:snyk": "snyk test --severity-threshold=high",
    "security:snyk:code": "snyk code test --severity-threshold=high",
    "security:snyk:iac": "snyk iac test --severity-threshold=high",
    "security:snyk:container": "snyk container test guild-api --severity-threshold=high",
    "security:snyk:monitor": "snyk monitor --all-projects"
  },
  "dependencies": {
    "@expo-google-fonts/signika-negative": "^0.4.2",
    "@expo/metro-runtime": "~6.1.2",
    "@expo/vector-icons": "^15.0.0",
    "@react-native-async-storage/async-storage": "2.2.0",
    "@react-native-community/datetimepicker": "^7.7.0",
    "@react-native-community/netinfo": "^11.4.1",
    "@react-native-firebase/app": "^23.4.0",
    "@react-native-firebase/auth": "^23.4.0",
    "@react-navigation/native": "^7.1.6",
    "@sentry/react-native": "^5.15.2",
    "@tanstack/react-query": "^5.17.19",
    "@testing-library/jest-native": "^5.4.3",
    "@types/crypto-js": "^4.2.2",
    "chart.js": "^4.5.1",
    "crypto-js": "^4.2.0",
    "expo": "54.0.13",
    "expo-av": "~14.0.7",
    "expo-blur": "~15.0.7",
    "expo-camera": "~17.0.8",
    "expo-constants": "~18.0.8",
    "expo-crypto": "~15.0.7",
    "expo-dev-client": "~6.0.16",
    "expo-device": "~8.0.9",
    "expo-document-picker": "~14.0.7",
    "expo-file-system": "~19.0.17",
    "expo-font": "~14.0.8",
    "expo-haptics": "~15.0.7",
    "expo-image-manipulator": "~12.0.5",
    "expo-image-picker": "~17.0.8",
    "expo-linear-gradient": "~15.0.7",
    "expo-linking": "~8.0.8",
    "expo-local-authentication": "~17.0.7",
    "expo-localization": "~17.0.7",
    "expo-location": "~19.0.7",
    "expo-notifications": "~0.32.12",
    "expo-print": "~15.0.7",
    "expo-router": "~6.0.10",
    "expo-secure-store": "15.0.7",
    "expo-sharing": "~14.0.7",
    "expo-splash-screen": "^31.0.10",
    "expo-video-thumbnails": "~8.0.0",
    "firebase": "12.3.0",
    "firebase-admin": "^13.5.0",
    "i18n-js": "^4.5.1",
    "i18next": "^25.5.2",
    "jest-expo": "54.0.12",
    "linkify-it": "^5.0.0",
    "lucide-react": "^0.545.0",
    "lucide-react-native": "0.544.0",
    "nativewind": "4.2.1",
    "react": "^19.1.0",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^19.1.0",
    "react-i18next": "^15.7.3",
    "react-native": "0.81.4",
    "react-native-gesture-handler": "^2.20.2",
    "react-native-keyboard-aware-scroll-view": "^0.9.5",
    "react-native-map-clustering": "3.4.2",
    "react-native-maps": "^1.20.1",
    "react-native-qrcode-svg": "^6.3.15",
    "react-native-safe-area-context": "~5.6.0",
    "react-native-screens": "~4.16.0",
    "react-native-svg": "^15.8.0",
    "react-native-video": "^6.7.2",
    "react-native-web": "^0.21.0",
    "react-native-webview": "^13.15.0",
    "react-native-worklets": "0.5.1",
    "socket.io-client": "4.8.1",
    "web-vitals": "^5.1.0"
  },
  "devDependencies": {
    "@babel/core": "^7.28.4",
    "@babel/preset-typescript": "^7.27.1",
    "@firebase/rules-unit-testing": "^5.0.0",
    "@nx/expo": "^18.0.0",
    "@nx/js": "^18.0.0",
    "@nx/react": "^18.0.0",
    "@testing-library/jest-dom": "^6.9.1",
    "@testing-library/react": "^16.3.0",
    "@testing-library/react-native": "^13.3.3",
    "@types/jscodeshift": "^0.11.6",
    "@types/react": "~19.1.10",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "artillery": "^2.0.0",
    "axe-core": "^4.10.0",
    "babel-preset-expo": "~54.0.0",
    "depcheck": "^1.4.7",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-deprecation": "^1.5.0",
    "eslint-plugin-expo": "^1.0.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-performance": "^0.1.1",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-react-native": "^5.0.0",
    "eslint-plugin-security": "^1.7.1",
    "eslint-plugin-sonarjs": "^0.23.0",
    "eslint-plugin-unicorn": "^61.0.2",
    "eslint-plugin-unused-imports": "^3.2.0",
    "husky": "^8.0.3",
    "jest": "29.7.0",
    "jest-expo": "54.0.12",
    "jest-junit": "^16.0.0",
    "jscodeshift": "^0.15.1",
    "license-checker": "^25.0.1",
    "lighthouse": "^11.3.0",
    "lint-staged": "^15.2.0",
    "metro-react-native-babel-preset": "^0.77.0",
    "msw": "^2.0.0",
    "npm-check-updates": "^16.14.6",
    "nx": "^18.0.0",
    "playwright": "^1.47.2",
    "prettier": "^3.2.5",
    "puppeteer": "^21.6.1",
    "react-native-reanimated": "~4.1.1",
    "react-test-renderer": "^19.1.0",
    "sonarjs": "^1.0.0",
    "tailwindcss": "^3.4.17",
    "ts-morph": "^21.0.1",
    "typescript": "~5.9.2",
    "vitest": "^1.2.0"
  },
  "private": true
}
