rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ===== USER RULES =====
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;

      // User wallet sub-collection
      match /wallet/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // ===== WALLET RULES =====
    match /wallets/{walletId} {
      allow read, write: if request.auth != null && request.auth.uid == walletId;
    }

    // ===== CHAT RULES =====
    match /chats/{chatId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      allow update: if request.auth != null && request.auth.uid in resource.data.participants;
      allow delete: if request.auth != null && request.auth.uid in resource.data.participants;

      // Chat messages sub-collection
      match /messages/{messageId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.senderId;
      }
    }

    // ===== JOB RULES (Public read) =====
    match /jobs/{jobId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (resource.data.userId == request.auth.uid || resource.data.posterId == request.auth.uid);
    }

    // ===== GUILD RULES (Public read) =====
    match /guilds/{guildId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (request.auth.uid == resource.data.guildMasterId || request.auth.uid in resource.data.viceMasterIds);
    }

    // ===== PROPOSAL RULES =====
    match /proposals/{proposalId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == resource.data.freelancerId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.freelancerId;
    }

    // ===== REVIEW RULES =====
    match /reviews/{reviewId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.reviewerId;
    }

    // ===== NOTIFICATION RULES =====
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // ===== FILE UPLOADS METADATA =====
    match /file_uploads/{fileId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uploadedBy;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.uploadedBy;
    }

    // ===== ADMIN ONLY RULES =====
    match /admin/{document=**} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }
  }
}
